---
import { getCollection } from "astro:content";
import { getFolderPaths } from "../../../../../utils/staticPath";
import BaseLayout from "../../../../../layouts/baseLayout.astro";
import Demo from "../../../../../components/pages/demo.astro";
import ExplorerDesktop from "../../../../../components/pages/explorerDesktop.astro";
import ExplorerMobile from "../../../../../components/pages/explorerMobile.astro";

export async function getStaticPaths() {
  return await getFolderPaths();
}
const { folder } = Astro.params;
const files = await getCollection(
  "demos",
  ({ slug }) => slug.startsWith("en") && slug.includes(folder as string)
);
const translatedFiles = await getCollection(
  "demos",
  ({ slug }) => slug.startsWith("pl") && slug.includes(folder as string)
);
---

<BaseLayout>
  <section
    class="flex w-full flex-grow flex-col items-center self-center justify-self-center md:justify-center"
  >
    <ExplorerDesktop>
      {
        files.map(({ data, slug }) => {
          const url = slug.split("/").splice(2).join("/");
          const translatedTitle = translatedFiles.find(({ slug }) =>
            slug.includes(url)
          )?.data.title;
          return (
            <Demo path={`./${url}`} fileName={translatedTitle ?? data.title} />
          );
        })
      }
    </ExplorerDesktop>
    <ExplorerMobile>
      {
        files.map(({ data, slug }) => {
          const url = slug.split("/").splice(2).join("/");
          const translatedTitle = translatedFiles.find(({ slug }) =>
            slug.includes(url)
          )?.data.title;
          return (
            <Demo path={`./${url}`} fileName={translatedTitle ?? data.title} />
          );
        })
      }
    </ExplorerMobile>
  </section>
</BaseLayout>
